sales_data$building_class_category <- factor(sales_data$building_class_category)
sales_data$tax_class_at_present <- factor(sales_data$tax_class_at_present)
#sales_data$block <- factor(sales_data$block)
#sales_data$lot <- factor(sales_data$lot)
sales_data$building_class_at_present <- factor(sales_data$building_class_at_present)
#sales_data$zipcode <- factor(sales_data$zipcode)
sales_data$residential_units <- factor(sales_data$residential_units)
sales_data$commercial_units <- factor(sales_data$commercial_units)
sales_data$total_units <- factor(sales_data$total_units)
#sales_data$year_built <- factor(sales_data$year_built)
sales_data$tax_class_at_sale <- factor(sales_data$tax_class_at_sale)
sales_data$building_class_at_sale <- factor(sales_data$building_class_at_sale)
summary(sales_data)
# PLOT
# - Most of the buildings sold fall under $7.5M price range
# - Most building sold fall under tax class 2
ggplot(data=sales_data, mapping=aes(x=sale_price, color=tax_class_at_sale)) +
geom_density() +
facet_zoom(xlim = c(0, 10000000))
ggtitle("Distribution of sale prices less than $10M")
# PLOT
sales_data %>%
filter(tax_class_at_sale == 1) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 1")
sales_data %>%
filter(tax_class_at_sale == 2) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 2")
sales_data %>%
filter(tax_class_at_sale == 4) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 4")
#PLOT
ggplot(data = sales_data) +
geom_point(mapping = aes(x = sale_date, y = sale_price, color = tax_class_at_sale), alpha = 0.75) +
coord_cartesian(ylim = c(0, 100000000))+
ggtitle("Sale prices over the months")
# Removing sales less than $1000
sales_data <- filter(sales_data, sale_price>1000)
# Removing missing data
sales_data <- filter(sales_data, !is.na(sales_data$year_built), !is.na(sales_data$land_sqft))
dim(sales_data)
# Remove duplicate rows if any
sales_data <- sales_data %>% distinct()
summary(sales_data)
sapply(sales_data, function(x) sum(is.na(x)))
dim(sales_data)
#### Analysis ####
library(caret)
require(nnet)
# creating a target variable, Area, from land square feet column
sales_data <- sales_data %>%
mutate(Area = case_when(land_sqft<=1754 ~ 1,
land_sqft<=2300 ~ 2,
land_sqft<=4112 ~ 3,
land_sqft<=659375 ~ 4))
sales_data <- sales_data %>% select(-c(land_sqft))
sales_data$Area <- factor(sales_data$Area)
features = setdiff(names(sales_data),'Area')
summary(sales_data)
index <- createDataPartition(sales_data$Area, p = .70, list = FALSE)
train <- sales_data[index,]
test <- sales_data[-index,]
# Setting the reference level since this is a multinomial classifier
train$Area <- relevel(train$Area, ref = 1)
# Training the multinomial model
multinom_model <- multinom(Area ~ ., data = sales_data)
# Checking the model
summary(multinom_model)
# splitting the data set
sales_data <- select(sales_data, c("neighborhood", "building_class_category", "block", "lot", "tax_class_at_sale", "building_class_at_sale",
"sale_price", "Area"))
index <- createDataPartition(sales_data$Area, p = .70, list = FALSE)
train <- sales_data[index,]
test <- sales_data[-index,]
# Setting the reference level since this is a multinomial classifier
train$Area <- relevel(train$Area, ref = 1)
# Training the multinomial model
multinom_model <- multinom(Area ~ ., data = sales_data)
# Checking the model
summary(multinom_model)
# converting coefficients to odds
exp(coef(multinom_model))
# creating a target variable, Area, from land square feet column
sales_data <- sales_data %>%
mutate(Area = case_when(land_sqft<=1754 ~ 1,
land_sqft<=2300 ~ 2,
land_sqft<=4112 ~ 3,
land_sqft<=659375 ~ 4))
head(round(fitted(multinom_model), 2))
# Predicting the class for test dataset
test$ClassPredicted <- predict(multinom_model, newdata = test[1:7], "class")
confusionMatrix(table(test$ClassPredicted,
test$Area), positive="1")
library(tibble)
library(ggplot2)
library(tidyverse)
library(ggforce)
library(dplyr)
theme_set(theme_bw(16))
##### Pre-processing #####
# excel file converted to csv and read
sales <- read.csv("rollingsales_manhattan.csv", skip=5, header=FALSE)
colnames(sales) <- c("borough", "neighborhood", "building_class_category", "tax_class_at_present", "block", "lot", "easement",
"building_class_at_present", "address", "apartment_number", "zipcode", "residential_units", "commercial_units",
"total_units", "land_sqft", "gross_sqft", "year_built", "tax_class_at_sale", "building_class_at_sale",
"sale_price","sale_date")
sales_data <- as_tibble(sales)
summary(sales_data)
# removing borough, easement, address, and apartment number columns
sales_data <- sales_data %>% select(-c(borough,easement,address,apartment_number,gross_sqft))
# converting land sq.feet, gross sq.feet, and sale price to numeric
sales_data$land_sqft = as.numeric(gsub(",", "", sales_data$land_sqft))
sales_data$sale_price = as.numeric(gsub(",", "", sales_data$sale_price))
summary(sales_data)
# converting the character type variables and some numeric type variables to factors
sales_data$neighborhood <- factor(sales_data$neighborhood)
sales_data$building_class_category <- factor(sales_data$building_class_category)
sales_data$tax_class_at_present <- factor(sales_data$tax_class_at_present)
sales_data$block <- factor(sales_data$block)
sales_data$lot <- factor(sales_data$lot)
sales_data$building_class_at_present <- factor(sales_data$building_class_at_present)
sales_data$zipcode <- factor(sales_data$zipcode)
sales_data$residential_units <- factor(sales_data$residential_units)
sales_data$commercial_units <- factor(sales_data$commercial_units)
sales_data$total_units <- factor(sales_data$total_units)
sales_data$year_built <- factor(sales_data$year_built)
sales_data$tax_class_at_sale <- factor(sales_data$tax_class_at_sale)
sales_data$building_class_at_sale <- factor(sales_data$building_class_at_sale)
# converting the date column to date type
sales_data$sale_date <- as.Date(sales_data$sale_date, "%m/%d/%Y")
summary(sales_data)
# PLOT
# - Most of the buildings sold fall under $7.5M price range
# - Most building sold fall under tax class 2
ggplot(data=sales_data, mapping=aes(x=sale_price, color=tax_class_at_sale)) +
geom_density() +
facet_zoom(xlim = c(0, 10000000))
ggtitle("Distribution of sale prices less than $10M")
# PLOT
sales_data %>%
filter(tax_class_at_sale == 1) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 1")
sales_data %>%
filter(tax_class_at_sale == 2) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 2")
sales_data %>%
filter(tax_class_at_sale == 4) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 4")
#PLOT
ggplot(data = sales_data) +
geom_point(mapping = aes(x = sale_date, y = sale_price, color = tax_class_at_sale), alpha = 0.75) +
coord_cartesian(ylim = c(0, 100000000))+
ggtitle("Sale prices over the months")
# Removing sales less than $1000
sales_data <- filter(sales_data, sale_price>1000)
# Removing missing data
sales_data <- filter(sales_data, !is.na(sales_data$year_built), !is.na(sales_data$land_sqft))
dim(sales_data)
# Remove duplicate rows if any
sales_data <- sales_data %>% distinct()
summary(sales_data)
sapply(sales_data, function(x) sum(is.na(x)))
dim(sales_data)
#### Analysis ####
library(caret)
require(nnet)
# creating a target variable, Area, from land square feet column
sales_data <- sales_data %>%
mutate(Area = case_when(land_sqft<=1754 ~ 1,
land_sqft<=2300 ~ 2,
land_sqft<=4112 ~ 3,
land_sqft<=659375 ~ 4))
sales_data <- sales_data %>% select(-c(land_sqft))
sales_data$Area <- factor(sales_data$Area)
summary(sales_data)
# splitting the data set
sales_data <- select(sales_data, c("neighborhood", "building_class_category", "block", "lot", "tax_class_at_sale", "building_class_at_sale",
"sale_price", "Area"))
features = setdiff(names(sales_data),'Area')
index <- createDataPartition(sales_data$Area, p = .70, list = FALSE)
train <- sales_data[index,]
test <- sales_data[-index,]
# Setting the reference level since this is a multinomial classifier
train$Area <- relevel(train$Area, ref = 1)
# Training the multinomial model
multinom_model <- multinom(Area ~ ., data = sales_data[1:7])
# Setting the reference level since this is a multinomial classifier
train$Area <- relevel(train$Area, ref = 1)
# Training the multinomial model
multinom_model <- multinom(train$Area ~ ., data = train[1:7])
# Setting the reference level since this is a multinomial classifier
train$Area <- relevel(train$Area, ref = 1)
# Training the multinomial model
multinom_model <- multinom(Area ~ ., data = sales_data[1:7])
library(tibble)
library(ggplot2)
library(tidyverse)
library(ggforce)
library(dplyr)
theme_set(theme_bw(16))
##### Pre-processing #####
# excel file converted to csv and read
sales <- read.csv("rollingsales_manhattan.csv", skip=5, header=FALSE)
colnames(sales) <- c("borough", "neighborhood", "building_class_category", "tax_class_at_present", "block", "lot", "easement",
"building_class_at_present", "address", "apartment_number", "zipcode", "residential_units", "commercial_units",
"total_units", "land_sqft", "gross_sqft", "year_built", "tax_class_at_sale", "building_class_at_sale",
"sale_price","sale_date")
sales_data <- as_tibble(sales)
summary(sales_data)
# removing borough, easement, address, and apartment number columns
sales_data <- sales_data %>% select(-c(borough,easement,address,apartment_number,gross_sqft))
# converting land sq.feet, gross sq.feet, and sale price to numeric
sales_data$land_sqft = as.numeric(gsub(",", "", sales_data$land_sqft))
sales_data$sale_price = as.numeric(gsub(",", "", sales_data$sale_price))
summary(sales_data)
# converting the character type variables and some numeric type variables to factors
sales_data$neighborhood <- factor(sales_data$neighborhood)
sales_data$building_class_category <- factor(sales_data$building_class_category)
sales_data$tax_class_at_present <- factor(sales_data$tax_class_at_present)
#sales_data$block <- factor(sales_data$block)
#sales_data$lot <- factor(sales_data$lot)
sales_data$building_class_at_present <- factor(sales_data$building_class_at_present)
sales_data$zipcode <- factor(sales_data$zipcode)
sales_data$residential_units <- factor(sales_data$residential_units)
sales_data$commercial_units <- factor(sales_data$commercial_units)
sales_data$total_units <- factor(sales_data$total_units)
sales_data$year_built <- factor(sales_data$year_built)
sales_data$tax_class_at_sale <- factor(sales_data$tax_class_at_sale)
sales_data$building_class_at_sale <- factor(sales_data$building_class_at_sale)
# converting the date column to date type
sales_data$sale_date <- as.Date(sales_data$sale_date, "%m/%d/%Y")
summary(sales_data)
# PLOT
# - Most of the buildings sold fall under $7.5M price range
# - Most building sold fall under tax class 2
ggplot(data=sales_data, mapping=aes(x=sale_price, color=tax_class_at_sale)) +
geom_density() +
facet_zoom(xlim = c(0, 10000000))
ggtitle("Distribution of sale prices less than $10M")
# PLOT
sales_data %>%
filter(tax_class_at_sale == 1) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 1")
sales_data %>%
filter(tax_class_at_sale == 2) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 2")
sales_data %>%
filter(tax_class_at_sale == 4) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 4")
#PLOT
ggplot(data = sales_data) +
geom_point(mapping = aes(x = sale_date, y = sale_price, color = tax_class_at_sale), alpha = 0.75) +
coord_cartesian(ylim = c(0, 100000000))+
ggtitle("Sale prices over the months")
# Removing sales less than $1000
sales_data <- filter(sales_data, sale_price>1000)
# Removing missing data
sales_data <- filter(sales_data, !is.na(sales_data$year_built), !is.na(sales_data$land_sqft))
dim(sales_data)
# Remove duplicate rows if any
sales_data <- sales_data %>% distinct()
summary(sales_data)
sapply(sales_data, function(x) sum(is.na(x)))
dim(sales_data)
#### Analysis ####
library(caret)
require(nnet)
# creating a target variable, Area, from land square feet column
sales_data <- sales_data %>%
mutate(Area = case_when(land_sqft<=1754 ~ 1,
land_sqft<=2300 ~ 2,
land_sqft<=4112 ~ 3,
land_sqft<=659375 ~ 4))
sales_data <- sales_data %>% select(-c(land_sqft))
sales_data$Area <- factor(sales_data$Area)
summary(sales_data)
# splitting the data set
sales_data <- select(sales_data, c("neighborhood", "building_class_category", "block", "lot", "tax_class_at_sale", "building_class_at_sale",
"sale_price", "Area"))
features = setdiff(names(sales_data),'Area')
index <- createDataPartition(sales_data$Area, p = .70, list = FALSE)
train <- sales_data[index,]
test <- sales_data[-index,]
# Setting the reference level since this is a multinomial classifier
train$Area <- relevel(train$Area, ref = 1)
# Training the multinomial model
multinom_model <- multinom(train$Area ~ ., data = train[1:7])
# Checking the model
summary(multinom_model)
# converting coefficients to odds
exp(coef(multinom_model))
head(round(fitted(multinom_model), 2))
# Predicting the class for test dataset
test$ClassPredicted <- predict(multinom_model, newdata = test[1:7], "class")
confusionMatrix(table(test$ClassPredicted,
test$Area), positive="1")
library(tibble)
library(ggplot2)
library(tidyverse)
library(ggforce)
library(dplyr)
theme_set(theme_bw(16))
##### Pre-processing #####
# excel file converted to csv and read
sales <- read.csv("rollingsales_manhattan.csv", skip=5, header=FALSE)
colnames(sales) <- c("borough", "neighborhood", "building_class_category", "tax_class_at_present", "block", "lot", "easement",
"building_class_at_present", "address", "apartment_number", "zipcode", "residential_units", "commercial_units",
"total_units", "land_sqft", "gross_sqft", "year_built", "tax_class_at_sale", "building_class_at_sale",
"sale_price","sale_date")
sales_data <- as_tibble(sales)
summary(sales_data)
# removing borough, easement, address, and apartment number columns
sales_data <- sales_data %>% select(-c(borough,easement,address,apartment_number,gross_sqft))
# converting land sq.feet, gross sq.feet, and sale price to numeric
sales_data$land_sqft = as.numeric(gsub(",", "", sales_data$land_sqft))
sales_data$sale_price = as.numeric(gsub(",", "", sales_data$sale_price))
summary(sales_data)
# converting the character type variables and some numeric type variables to factors
sales_data$neighborhood <- factor(sales_data$neighborhood)
sales_data$building_class_category <- factor(sales_data$building_class_category)
sales_data$tax_class_at_present <- factor(sales_data$tax_class_at_present)
#sales_data$block <- factor(sales_data$block)
#sales_data$lot <- factor(sales_data$lot)
sales_data$building_class_at_present <- factor(sales_data$building_class_at_present)
sales_data$zipcode <- factor(sales_data$zipcode)
sales_data$residential_units <- factor(sales_data$residential_units)
sales_data$commercial_units <- factor(sales_data$commercial_units)
sales_data$total_units <- factor(sales_data$total_units)
sales_data$year_built <- factor(sales_data$year_built)
sales_data$tax_class_at_sale <- factor(sales_data$tax_class_at_sale)
sales_data$building_class_at_sale <- factor(sales_data$building_class_at_sale)
# converting the date column to date type
sales_data$sale_date <- as.Date(sales_data$sale_date, "%m/%d/%Y")
summary(sales_data)
# PLOT
# - Most of the buildings sold fall under $7.5M price range
# - Most building sold fall under tax class 2
ggplot(data=sales_data, mapping=aes(x=sale_price, color=tax_class_at_sale)) +
geom_density() +
facet_zoom(xlim = c(0, 10000000))
ggtitle("Distribution of sale prices less than $10M")
# PLOT
sales_data %>%
filter(tax_class_at_sale == 1) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 1")
# PLOT
# - Most of the buildings sold fall under $7.5M price range
# - Most building sold fall under tax class 2
ggplot(data=sales_data, mapping=aes(x=sale_price, color=tax_class_at_sale)) +
geom_density() +
facet_zoom(xlim = c(0, 10000000))
ggtitle("Distribution of sale prices less than $10M")
# PLOT
sales_data %>%
filter(tax_class_at_sale == 1) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 1")
sales_data %>%
filter(tax_class_at_sale == 2) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 2")
sales_data %>%
filter(tax_class_at_sale == 4) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 4")
#PLOT
ggplot(data = sales_data) +
geom_point(mapping = aes(x = sale_date, y = sale_price, color = tax_class_at_sale), alpha = 0.75) +
coord_cartesian(ylim = c(0, 100000000))+
ggtitle("Sale prices over the months")
# PLOT
# - Most of the buildings sold fall under $7.5M price range
# - Most building sold fall under tax class 2
ggplot(data=sales_data, mapping=aes(x=sale_price, color=tax_class_at_sale)) +
geom_density() +
facet_zoom(xlim = c(0, 10000000))
#PLOT
ggplot(data = sales_data) +
geom_point(mapping = aes(x = sale_date, y = sale_price, color = tax_class_at_sale), alpha = 0.75) +
coord_cartesian(ylim = c(0, 100000000))+
ggtitle("Sale prices over the months")
library(tibble)
library(ggplot2)
library(tidyverse)
library(ggforce)
library(dplyr)
theme_set(theme_bw(16))
##### Pre-processing #####
# excel file converted to csv and read
sales <- read.csv("rollingsales_manhattan.csv", skip=5, header=FALSE)
colnames(sales) <- c("borough", "neighborhood", "building_class_category", "tax_class_at_present", "block", "lot", "easement",
"building_class_at_present", "address", "apartment_number", "zipcode", "residential_units", "commercial_units",
"total_units", "land_sqft", "gross_sqft", "year_built", "tax_class_at_sale", "building_class_at_sale",
"sale_price","sale_date")
sales_data <- as_tibble(sales)
summary(sales_data)
# removing borough, easement, address, and apartment number columns
sales_data <- sales_data %>% select(-c(borough,easement,address,apartment_number,gross_sqft))
# converting land sq.feet, gross sq.feet, and sale price to numeric
sales_data$land_sqft = as.numeric(gsub(",", "", sales_data$land_sqft))
sales_data$sale_price = as.numeric(gsub(",", "", sales_data$sale_price))
summary(sales_data)
# converting the character type variables and some numeric type variables to factors
sales_data$neighborhood <- factor(sales_data$neighborhood)
sales_data$building_class_category <- factor(sales_data$building_class_category)
sales_data$tax_class_at_present <- factor(sales_data$tax_class_at_present)
#sales_data$block <- factor(sales_data$block)
#sales_data$lot <- factor(sales_data$lot)
sales_data$building_class_at_present <- factor(sales_data$building_class_at_present)
sales_data$zipcode <- factor(sales_data$zipcode)
sales_data$residential_units <- factor(sales_data$residential_units)
sales_data$commercial_units <- factor(sales_data$commercial_units)
sales_data$total_units <- factor(sales_data$total_units)
sales_data$year_built <- factor(sales_data$year_built)
sales_data$tax_class_at_sale <- factor(sales_data$tax_class_at_sale)
sales_data$building_class_at_sale <- factor(sales_data$building_class_at_sale)
# converting the date column to date type
sales_data$sale_date <- as.Date(sales_data$sale_date, "%m/%d/%Y")
summary(sales_data)
# PLOT
# - Most of the buildings sold fall under $7.5M price range
# - Most building sold fall under tax class 2
ggplot(data=sales_data, mapping=aes(x=sale_price, color=tax_class_at_sale)) +
geom_density() +
facet_zoom(xlim = c(0, 10000000))
ggtitle("Distribution of sale prices less than $10M")
# PLOT
sales_data %>%
filter(tax_class_at_sale == 1) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 1")
sales_data %>%
filter(tax_class_at_sale == 2) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 2")
sales_data %>%
filter(tax_class_at_sale == 4) %>%
ggplot(aes(x = sale_date)) +
geom_freqpoly(binwidth = 12) +
ggtitle("Frequency polygon of sale dates - tax class 4")
#PLOT
ggplot(data = sales_data) +
geom_point(mapping = aes(x = sale_date, y = sale_price, color = tax_class_at_sale), alpha = 0.75) +
coord_cartesian(ylim = c(0, 100000000))+
ggtitle("Sale prices over the months")
# Removing sales less than $1000
sales_data <- filter(sales_data, sale_price>1000)
# Removing missing data
sales_data <- filter(sales_data, !is.na(sales_data$year_built), !is.na(sales_data$land_sqft))
dim(sales_data)
# Remove duplicate rows if any
sales_data <- sales_data %>% distinct()
summary(sales_data)
sapply(sales_data, function(x) sum(is.na(x)))
dim(sales_data)
#### Analysis ####
library(caret)
require(nnet)
# creating a target variable, Area, from land square feet column
sales_data <- sales_data %>%
mutate(Area = case_when(land_sqft<=1754 ~ 1,
land_sqft<=2300 ~ 2,
land_sqft<=4112 ~ 3,
land_sqft<=659375 ~ 4))
sales_data <- sales_data %>% select(-c(land_sqft))
sales_data$Area <- factor(sales_data$Area)
summary(sales_data)
# splitting the data set
sales_data <- select(sales_data, c("neighborhood", "building_class_category", "block", "lot", "tax_class_at_sale", "building_class_at_sale",
"sale_price", "Area"))
features = setdiff(names(sales_data),'Area')
summary(sales_data)
index <- createDataPartition(sales_data$Area, p = .70, list = FALSE)
train <- sales_data[index,]
test <- sales_data[-index,]
# Setting the reference level since this is a multinomial classifier
train$Area <- relevel(train$Area, ref = 1)
# Training the multinomial model
multinom_model <- multinom(train$Area ~ ., data = train[1:7])
# Checking the model
summary(multinom_model)
# converting coefficients to odds
exp(coef(multinom_model))
head(round(fitted(multinom_model), 2))
# Predicting the class for test dataset
test$ClassPredicted <- predict(multinom_model, newdata = test[1:7], "class")
confusionMatrix(table(test$ClassPredicted,
test$Area), positive="1")
